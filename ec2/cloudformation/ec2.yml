---
# CloudFormation script
# This script deploys two EC2 Linux instances, one in a public subnet and the other in a private subnet.

AWSTemplateFormatVersion:        "2010-09-09"
Description:                     Deploy EC2 instances in public and private subnets of existing non-default VPC

# Metadata:
#   template metadata
#
Parameters:

  OwnerParameter:
    Type:                        String
    Default:                     Your Name

  EnvironmentParameter:
    Type:                        String
    Default:                     dev
    AllowedValues:
    - dev
    - prod
    - test

  VpcStackNameParameter:
    Type:                        String
    Default:                     dev-vpc-stack


  KeyNameParameter:
    Description:                 Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type:                        AWS::EC2::KeyPair::KeyName
    ConstraintDescription:       Must be the name of an existing EC2 KeyPair.

  InstanceTypeParameter:
    Description:                 WebServer EC2 instance type
    Type:                        String
    Default:                     t3.micro
    AllowedValues:               [t2.nano, t2.micro, t2.small, t2.medium, t2.large, t2.xlarge, t2.2xlarge,
      t3.nano, t3.micro, t3.small, t3.medium, t3.large, t3.xlarge, t3.2xlarge,
      m4.large, m4.xlarge, m4.2xlarge, m4.4xlarge, m4.10xlarge,
      m5.large, m5.xlarge, m5.2xlarge, m5.4xlarge,
      c5.large, c5.xlarge, c5.2xlarge, c5.4xlarge, c5.9xlarge,
      g3.8xlarge,
      r5.large, r5.xlarge, r5.2xlarge, r5.4xlarge, r3.12xlarge,
      i3.xlarge, i3.2xlarge, i3.4xlarge, i3.8xlarge,
      d2.xlarge, d2.2xlarge, d2.4xlarge, d2.8xlarge]
    ConstraintDescription:       Must be a valid EC2 instance type.

  SSHLocationParameter:
    Description:                 The IP address range that can be used to SSH to the EC2 instances
    Type:                        String
    MinLength:                   9
    MaxLength:                   18
    Default:                     0.0.0.0/0
    AllowedPattern:              (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription:       Must be a valid IP CIDR range of the form x.x.x.x/x.

  LatestAmiIdParameter:
    Type:                        'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default:                     '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'


# Rules:
#   set of rules
#
# Mappings:
#   set of mappings
#
# Conditions:
#   set of conditions
#
# Transform:
#   set of transforms

Resources:

  EC2Role:
    Type:                        "AWS::IAM::Role"
    Properties:
      Description:               EC2 Role
      RoleName:                  !Join ['-',[!Ref "AWS::StackName", EC2, Role]]
      AssumeRolePolicyDocument:
        Version:                 "2012-10-17"
        Statement:
          - Effect:              "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Tags:
        - Key:                   Environment
          Value:                 !Ref EnvironmentParameter


  RolePolicies:
    Type:                        "AWS::IAM::Policy"
    Properties:
      PolicyName:                "EC2-Policy"
      PolicyDocument:
        Version:                 "2012-10-17"
        Statement:
          - Effect:              "Allow"
            Action:              "*"
            Resource:            "*"
      Roles:
        - !Ref EC2Role



  LinuxServerInstanceProfile:
    Type:                        AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName:       LinuxServerInstanceProfile
      Roles:
        - !Ref EC2Role



  LinuxServer1:
    Type:                        AWS::EC2::Instance
    Properties:
      InstanceType:              !Ref InstanceTypeParameter
      SecurityGroupIds:
        - Fn::ImportValue:       !Sub "${VpcStackNameParameter}-DefaultSecurityGroup"
      KeyName:                   !Ref KeyNameParameter
      ImageId:                   !Ref LatestAmiIdParameter
      SubnetId:
        Fn::ImportValue:         !Sub "${VpcStackNameParameter}-PublicSubnet1"



Outputs:
  InstanceId:
    Description:                 InstanceId of the newly created EC2 instance
    Value:                       !Ref LinuxServer1
  AZ:
    Description:                 Availability Zone of the newly created EC2 instance
    Value:                       !GetAtt [LinuxServer1, AvailabilityZone]
  PublicDNS:
    Description:                 Public DNSName of the newly created EC2 instance
    Value:                       !GetAtt [LinuxServer1, PublicDnsName]
  PublicIP:
    Description:                 Public IP address of the newly created EC2 instance
    Value:                       !GetAtt [LinuxServer1, PublicIp]
